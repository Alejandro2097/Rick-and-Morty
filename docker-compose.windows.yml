version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: fullstack_postgres
    environment:
      POSTGRES_DB: fullstack_app
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - fullstack_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d fullstack_app"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: fullstack_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - fullstack_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  db-init:
    image: node:20-alpine
    container_name: fullstack_db_init
    working_dir: /app
    volumes:
      - ./backend:/app
    command: >
      sh -c "
        apk add --no-cache postgresql-client &&
        echo '⏳ Esperando PostgreSQL...' &&
        until pg_isready -h postgres -U postgres -d fullstack_app; do
          echo 'Esperando PostgreSQL...'
          sleep 2
        done &&
        echo '✅ PostgreSQL listo!' &&
        echo '🔧 Generando cliente Prisma...' &&
        npx prisma generate &&
        echo '📊 Ejecutando migraciones...' &&
        npx prisma migrate deploy &&
        echo '🌱 Poblando base de datos...' &&
        npx prisma db seed &&
        echo '✅ Base de datos configurada!'
      "
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - fullstack_network
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/fullstack_app


volumes:
  postgres_data:
  redis_data:

networks:
  fullstack_network:
    driver: bridge 